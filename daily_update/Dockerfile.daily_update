# 构建阶段
FROM python:3.11-slim AS builder

WORKDIR /build

# 复制依赖文件
COPY StockDownloader/requirements.txt StockDownloader/requirements.txt
COPY daily_update/requirements.txt daily_update/requirements.txt

# 合并依赖并安装
RUN cat StockDownloader/requirements.txt > requirements.txt && \
    pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt --target=/python_deps

# 运行阶段
FROM python:3.11-slim

WORKDIR /app

# 复制依赖
COPY --from=builder /python_deps /usr/local/lib/python3.11/site-packages/

# 创建必要的目录
RUN mkdir -p /app/StockDownloader/cache /app/logs

# 设置时区为上海并安装cron
RUN apt-get update && apt-get install -y tzdata cron \
    && ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    && dpkg-reconfigure -f noninteractive tzdata \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 设置环境变量
ENV PYTHONPATH=/app
ENV CACHE_PATH=/app/StockDownloader/cache
ENV LOG_DIR=/app/logs

# 添加crontab文件
COPY daily_update/crontab /etc/cron.d/daily_update_cron
RUN chmod 0644 /etc/cron.d/daily_update_cron && \
    crontab /etc/cron.d/daily_update_cron

# 创建启动脚本
RUN echo '#!/bin/sh\n\
# 确保日志目录权限正确\n\
chmod -R 777 /app/logs\n\
# 执行一次初始数据更新（无论是否为交易日）\n\
python daily_update/daily_update.py\n\
# 启动cron服务并保持容器运行\n\
exec cron -f' > /app/start.sh && \
    chmod +x /app/start.sh

# 启动命令
CMD ["/app/start.sh"]